{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","index.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","_arrayWithoutHoles","iter","Symbol","iterator","Object","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","initDOM","h","addNode","removeNode","changeNode","type","props","_len","arguments","children","_key","patch","dom","vdom","parent","undefined","parentNode","replace","el","replaceChild","Text","textContent","render","nodeName","toUpperCase","_ref","_ref2","pool","key","concat","apply","childNodes","map","child","index","appendChild","remove","mount","document","createTextNode","createElement","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","_ref3","next","done","value","err","return","Error","updateElement","newDom","rootElement","getElementById","node","$el","forEach","bind","buttons","initNodeButton","innerText","addEventListener","addNodeButton","removeNodeButton","changeNodeButton"],"mappings":"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","file":"static/js/main.a65281ea.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","/** @jsx h */\nconst initDOM = (\n  <div>\n    <p>Hello!</p>\n    <ul>\n      <li>How is it going?</li>\n    </ul>\n  </div>\n);\n\nconst addNode = (\n  <div>\n    <p>Hello!</p>\n    <ul>\n      <li>How is it going?</li>\n    </ul>\n    <p>Good</p>\n  </div>\n);\n\nconst removeNode = (\n  <div>\n    <p>Hello!</p>\n    <ul>\n      <li>How is it going?</li>\n    </ul>\n  </div>\n);\n\nconst changeNode = (\n  <div>\n    <p>Hi!</p>\n    <ul>\n      <li>How is it going?</li>\n    </ul>\n  </div>\n);\n\nfunction h(type, props, ...children) {\n  return { type, props, children };\n}\n\nfunction createElement(node) {\n  if (typeof node === \"string\") {\n    return document.createTextNode(node);\n  }\n  const $el = document.createElement(node.type);\n  node.children.map(createElement).forEach($el.appendChild.bind($el));\n  return $el;\n}\n\nconst patch = (dom, vdom, parent=dom.parentNode) => {\n  const replace = parent ? el => (parent.replaceChild(el, dom) && el) : (el => el);\n\n  if (typeof vdom != 'object' && dom instanceof Text) {\n      return dom.textContent != vdom ? replace(render(vdom, parent)) : dom;\n  }  else if (typeof vdom == 'object' && dom.nodeName != vdom.type.toUpperCase()) {\n      return replace(render(vdom, parent));\n  } else if (typeof vdom == 'object' && dom.nodeName == vdom.type.toUpperCase()) {\n      const pool = {};\n      [].concat(...dom.childNodes).map((child, index) => {\n          const key = `__key${index}`;\n          pool[key] = child;\n      });\n      [].concat(...vdom.children).map((child, index) => {\n          const key = `__key${index}`;\n          dom.appendChild(pool[key] ? patch(pool[key], child) : render(child, dom));\n          delete pool[key];\n      });\n      for (const key in pool) {\n          pool[key].remove();\n      }\n      return dom;\n  }\n};\n\nconst render = (vdom, parent=null) => {\n  const mount = parent ? (el => parent.appendChild(el)) : (el => el);\n  if (typeof vdom == 'string' || typeof vdom == 'number') {\n      return mount(document.createTextNode(vdom));\n  } else if (typeof vdom == 'object' && typeof vdom.type == 'string') {\n      const dom = mount(document.createElement(vdom.type));\n      for (const child of [].concat(...vdom.children))\n          render(child, dom);\n      return dom;\n  } else {\n      throw new Error(`Invalid VDOM: ${vdom}.`);\n  }\n};\n\nfunction updateElement() {\n  // TODO: implement\n  //console.log(arguments[1], arguments[2]);\n  let dom = arguments[0];\n  let newDom = arguments[1];\n  patch(dom, newDom);\n}\n\n\nconst rootElement = document.getElementById(\"root\");\nrootElement.appendChild(createElement(initDOM));\n\n\n\nconst buttons = document.getElementById(\"buttons\");\nconst initNodeButton = document.createElement(\"button\");\n\ninitNodeButton.innerText = \"Init\";\n\nbuttons.appendChild(initNodeButton);\n\ninitNodeButton.addEventListener(\"click\", () => {\n  updateElement(rootElement, initDOM, initDOM);\n});\n\nconst addNodeButton = document.createElement(\"button\");\naddNodeButton.innerText = \"Add\";\nbuttons.appendChild(addNodeButton);\naddNodeButton.addEventListener(\"click\", () => {\n  updateElement(rootElement, addNode, initDOM);\n});\n\nconst removeNodeButton = document.createElement(\"button\");\nremoveNodeButton.innerText = \"Remove\";\nbuttons.appendChild(removeNodeButton);\nremoveNodeButton.addEventListener(\"click\", () => {\n  updateElement(rootElement, removeNode, addNode);\n});\n\nconst changeNodeButton = document.createElement(\"button\");\nchangeNodeButton.innerText = \"Change\";\nbuttons.appendChild(changeNodeButton);\nchangeNodeButton.addEventListener(\"click\", () => {\n  updateElement(rootElement, changeNode, removeNode);\n});\n\n\n\n\n\n\n"],"sourceRoot":""}